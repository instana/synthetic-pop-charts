{{- if .Values.ism.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
  name: synthetic-pop-ism-playback-engine
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "synthetic-pop.commonLabels" . | nindent 4 }}
    app: synthetic-pop
    app.kubernetes.io/name: ism
    component: synthetic-playback-ism
spec:
  selector:
    matchLabels:
      {{- include "synthetic-pop.selectorLabels" . | nindent 6 }}
      app: synthetic-pop
      app.kubernetes.io/name: ism
      component: synthetic-playback-ism
  replicas: {{ .Values.ism.replicas }}
  template:
    metadata:
      labels:
        {{- include "synthetic-pop.commonLabels" . | nindent 8 }}
        app: synthetic-pop
        app.kubernetes.io/name: ism
        component: synthetic-playback-ism
        role: playbackengine
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.popArch }}
      imagePullSecrets:
      {{- if .Values.downloadKey }}
      - name: "instana-io"
      {{- else if .Values.downloadSecret }}
      - name: {{ .Values.downloadSecret }}
      {{- end }}
      serviceAccountName: {{ template "synthetic-pop.ismServiceAccountName" . }}
      {{- include "synthetic-pop.seccomp" . | nindent 6 }}
      containers:
      - name: synthetic-playback-ism
        image: {{ .Values.imagePath }}/{{ .Values.ism.image.name }}:{{ .Values.ism.image.tag }}
        imagePullPolicy: {{ .Values.ism.image.pullPolicy }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsGroup: 20001
          capabilities:
            drop:
              - ALL
        resources:
          limits:
            cpu: {{ .Values.ism.resources.limits.cpu }}
            memory: {{ .Values.ism.resources.limits.memory }}
          requests:
            cpu: {{ .Values.ism.resources.requests.cpu }}
            memory: {{ .Values.ism.resources.requests.memory }}
        livenessProbe:
          httpGet:
            path: 1.0/synthetics/ism/status
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: 1.0/synthetics/ism/readiness
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 15
        ports:
          - containerPort: 8080
            name: web
            protocol: TCP
        volumeMounts:
          - mountPath: /opt/ibm/microservice/ism-playback/logs
            name: logs
          {{- if .Values.redis.tls.enabled }}
          - name: tls
            mountPath: {{ include "tls.certPath" . | quote }}
            readOnly: true
          {{- else }}
          - name: redis
            mountPath: {{ include "redis.passPath" . | quote }}
            readOnly: true
          {{- end }}
        env:
        # REDIS URL: For connecting to REDIS server.
        # Both parameters should match the values in the synthetic PoP controller.
        # ConfigurationQueue is the redis queue that test config is pushed onto.
        - name: ISM_REDIS_URL
          value: "redis://synthetic-pop-redis:6378/0?ConfigurationQueue=ISMPlaybackConfigQueue&AARQueue=AARQueue"
        - name: TLS_ENABLED
          value: {{ .Values.redis.tls.enabled | default false | quote }}
        {{- if .Values.redis.tls.enabled }}
        - name: CERTIFICATE_PATH
          value: {{ include "tls.certPath" . | quote }}
        {{- else }}
        - name: REDIS_PASSWORD_PATH
          value: {{ include "redis.passPath" . | quote }}
        {{- end }}
        - name: REDIS_PASSWORD
          value: ""
        - name: ENABLEREDIS
          value: "on"
        # length of sandbox pool
        - name: SANDBOX_LENGTH
          value: "3"
        # timeout for DNS, default is 10 seconds
        - name: DNS_TIMEOUT
          value: {{ .Values.ism.maxTimeout.DNS | quote }}
        # timeout for SSLCertificate, default is 30 seconds
        - name: SSLCERTIFICATE_TIMEOUT
          value: {{ .Values.ism.maxTimeout.SSLCertificate | quote }}
        # concurrency request number, default is 1000
        - name: CONCURRENCY_REQUESTS
          value: "1000"
        # Loglevel: ALL, TRACE, DEBUG, INFO, WARN, ERROR, FATAL, MARK
        - name: LOGLEVEL
          value: {{ .Values.ism.traceLevel | default "INFO"	| quote }}
      volumes:
      - name: logs
        emptyDir: {}
      {{- if .Values.redis.tls.enabled }}
      - name: tls
        secret:
          secretName: {{ .Values.redis.tls.secretName | quote }}
          optional: false
      {{- else if .Values.redis.password }}
      - name: redis
        secret:
          secretName: {{ template "redis.secretName" . }}
          optional: false
      {{- else if .Values.redis.passwordSecret }}
      - name: redis
        secret:
          secretName: {{ .Values.redis.passwordSecret }}
          optional: false
      {{- end }}
{{- end }}
