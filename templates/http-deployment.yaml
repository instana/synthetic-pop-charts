{{- if .Values.http.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
  name: synthetic-pop-http-playback-engine
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "synthetic-pop.commonLabels" . | nindent 4 }}
    app: synthetic-pop
    app.kubernetes.io/name: http
    component: synthetic-playback-http
spec:
  selector:
    matchLabels:
      {{- include "synthetic-pop.selectorLabels" . | nindent 6 }}
      app: synthetic-pop
      app.kubernetes.io/name: http
      component: synthetic-playback-http
  replicas: {{ .Values.http.replicas }}
  template:
    metadata:
      labels:
        {{- include "synthetic-pop.commonLabels" . | nindent 8 }}
        app: synthetic-pop
        app.kubernetes.io/name: http
        component: synthetic-playback-http
        role: playbackengine
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.popArch }}
      {{- if .Values.http.tolerations.enabled }}
      tolerations:
      - effect: {{ Values.http.tolerations.effect }}
        key: {{ Values.http.tolerations.key }}
        operator: {{ Values.http.tolerations.operator }}
        value: {{ Values.http.tolerations.value }}
      {{- end }}
      imagePullSecrets:
      {{- if .Values.downloadKey }}
      - name: "instana-io"
      {{- else if .Values.downloadSecret }}
      - name: {{ .Values.downloadSecret }}
      {{- end }}
      serviceAccountName: {{ template "synthetic-pop.httpServiceAccountName" . }}
      {{- include "synthetic-pop.seccomp" . | nindent 6 }}
      containers:
      - name: synthetic-playback-http
        image: {{ .Values.imagePath }}/{{ .Values.http.image.name }}:{{ .Values.http.image.tag }}
        imagePullPolicy: {{ .Values.http.image.pullPolicy }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsGroup: 20001
          capabilities:
            drop:
              - ALL
        resources:
          limits:
            cpu: {{ .Values.http.resources.limits.cpu }}
            memory: {{ .Values.http.resources.limits.memory }}
          requests:
            cpu: {{ .Values.http.resources.requests.cpu }}
            memory: {{ .Values.http.resources.requests.memory }}
        livenessProbe:
          httpGet:
            path: 1.0/synthetics/javascript/status
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: 1.0/synthetics/javascript/readiness
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 15
        ports:
          - containerPort: 8080
            name: web
            protocol: TCP
        volumeMounts:
          - mountPath: /opt/ibm/microservice/javascript-playback/logs
            name: logs
          - mountPath: /tmp
            name: tmp
          {{- if .Values.redis.tls.enabled }}
          - name: tls
            mountPath: {{ include "tls.certPath" . | quote }}
            readOnly: true
          {{- else }}
          - name: redis
            mountPath: {{ include "redis.passPath" . | quote }}
            readOnly: true
          {{- end }}
        env:
        - name: MODE
          value: "http"
        - name: HTTP_REDIS_URL
          value: "redis://synthetic-pop-redis:6378/0?ConfigurationQueue=HttpPlaybackConfigQueue&AARQueue=AARQueue"
        - name: TLS_ENABLED
          value: {{ .Values.redis.tls.enabled | default false | quote }}
        {{- if .Values.redis.tls.enabled }}
        - name: CERTIFICATE_PATH
          value: {{ include "tls.certPath" . | quote }}
        {{- else }}
        - name: REDIS_PASSWORD_PATH
          value: {{ include "redis.passPath" . | quote }}
        {{- end }}
        - name: REDIS_PASSWORD
          value: ""
        # disable HTTP Agent that keeps socket connections alive between keep-alive requests,HTTP connection will be reused
        - name: DISABLE_REQUEST_KEEP_ALIVE
          value: "yes"
        # max of execution time out, used in http mode
        - name: HTTP_TIMEOUT
          value: {{ .Values.http.maxTimeout | quote }}
        # How many CPU core will be used by the playback, less than the core number of your host
        - name: CORE_USED
          value: "1"
        # concurrency request number,only used in http mode , default is 500
        - name: CONCURRENCY_REQUESTS
          value: "500"
        # Loglevel: ALL, TRACE, DEBUG, INFO, WARN, ERROR, FATAL, MARK
        - name: LOGLEVEL
          value: {{ .Values.http.traceLevel | default "INFO"	| quote }}
      volumes:
      - name: tmp
        emptyDir: {} 
      - name: logs
        emptyDir: {}
      {{- if .Values.redis.tls.enabled }}
      - name: tls
        secret:
          secretName: {{ .Values.redis.tls.secretName | quote }}
          optional: false
      {{- else if .Values.redis.password }}
      - name: redis
        secret:
          secretName: {{ template "redis.secretName" . }}
          optional: false
      {{- else if .Values.redis.passwordSecret }}
      - name: redis
        secret:
          secretName: {{ .Values.redis.passwordSecret }}
          optional: false
      {{- end }}
{{- end }}
